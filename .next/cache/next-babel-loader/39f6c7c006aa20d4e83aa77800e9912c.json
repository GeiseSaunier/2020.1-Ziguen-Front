{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/app/src/services/index.js\";\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport api from \"./api\";\nimport axios from \"axios\";\n\nrenderPosts = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var res, posts;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return axios.get('/posts');\n\n          case 3:\n            res = _context.sent;\n            posts = res.data; // this will re render the view with new data\n\n            _this.setState({\n              Posts: posts.map(function (post, i) {\n                return __jsx(\"li\", {\n                  key: i,\n                  className: \"list-group-item\",\n                  __self: _this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 12,\n                    columnNumber: 11\n                  }\n                }, post.text);\n              })\n            });\n\n            _context.next = 11;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 8]]);\n  }));\n\n  return function renderPosts() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default test;","map":{"version":3,"sources":["/app/src/services/index.js"],"names":["React","api","axios","renderPosts","get","res","posts","data","setState","Posts","map","post","i","text","console","log","test"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEAC,WAAW;AAAA,sEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEQD,KAAK,CAACE,GAAN,CAAU,QAAV,CAFR;;AAAA;AAEJC,YAAAA,GAFI;AAGJC,YAAAA,KAHI,GAGID,GAAG,CAACE,IAHR,EAIR;;AACA,YAAA,KAAI,CAACC,QAAL,CAAc;AACZC,cAAAA,KAAK,EAAEH,KAAK,CAACI,GAAN,CAAU,UAACC,IAAD,EAAOC,CAAP;AAAA,uBACf;AAAI,kBAAA,GAAG,EAAEA,CAAT;AAAY,kBAAA,SAAS,EAAC,iBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAyCD,IAAI,CAACE,IAA9C,CADe;AAAA,eAAV;AADK,aAAd;;AALQ;AAAA;;AAAA;AAAA;AAAA;AAWRC,YAAAA,OAAO,CAACC,GAAR;;AAXQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA;AAAA;AAAA;AAAA,GAAX;;AAeA,eAAeC,IAAf","sourcesContent":["import React from \"react\";\nimport api from \"./api\";\nimport axios from \"axios\";\n\nrenderPosts = async() => {\n    try {\n      let res = await axios.get('/posts');\n      let posts = res.data;\n      // this will re render the view with new data\n      this.setState({\n        Posts: posts.map((post, i) => (\n          <li key={i} className=\"list-group-item\">{post.text}</li>\n        ))\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\nexport default test;    "]},"metadata":{},"sourceType":"module"}