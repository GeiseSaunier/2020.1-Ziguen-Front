{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport React from \"react\";\nimport api from \"./api\";\nimport axios from \"axios\";\n\nrenderPosts = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var res, posts;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return axios.get('/posts');\n\n          case 3:\n            res = _context.sent;\n            posts = res.data; // this will re render the view with new data\n\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 7]]);\n  }));\n\n  return function renderPosts() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default test;","map":{"version":3,"sources":["/app/src/services/index.js"],"names":["React","api","axios","renderPosts","get","res","posts","data","console","log","test"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEAC,WAAW;AAAA,sEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEQD,KAAK,CAACE,GAAN,CAAU,QAAV,CAFR;;AAAA;AAEJC,YAAAA,GAFI;AAGJC,YAAAA,KAHI,GAGID,GAAG,CAACE,IAHR,EAIR;;AAJQ;AAAA;;AAAA;AAAA;AAAA;AAMRC,YAAAA,OAAO,CAACC,GAAR;;AANQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA;AAAA;AAAA;AAAA,GAAX;;AAUA,eAAeC,IAAf","sourcesContent":["import React from \"react\";\nimport api from \"./api\";\nimport axios from \"axios\";\n\nrenderPosts = async() => {\n    try {\n      let res = await axios.get('/posts');\n      let posts = res.data;\n      // this will re render the view with new data\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\nexport default test;    "]},"metadata":{},"sourceType":"module"}